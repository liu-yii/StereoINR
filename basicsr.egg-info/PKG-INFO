Metadata-Version: 2.2
Name: basicsr
Version: 1.4.2
Summary: Open Source Image and Video Super-Resolution Toolbox
Home-page: https://github.com/xinntao/BasicSR
Author: Xintao Wang
Author-email: xintao.wang@outlook.com
License: Apache License 2.0
Keywords: computer vision,restoration,super resolution
Classifier: Development Status :: 4 - Beta
Classifier: License :: OSI Approved :: Apache Software License
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.7
Classifier: Programming Language :: Python :: 3.8
Description-Content-Type: text/markdown
Requires-Dist: addict
Requires-Dist: future
Requires-Dist: lmdb
Requires-Dist: opencv-python
Requires-Dist: Pillow
Requires-Dist: pyyaml
Requires-Dist: requests
Requires-Dist: scikit-image
Requires-Dist: scipy
Requires-Dist: tqdm
Requires-Dist: yapf
Requires-Dist: einops
Requires-Dist: lpips
Dynamic: author
Dynamic: author-email
Dynamic: classifier
Dynamic: description
Dynamic: description-content-type
Dynamic: home-page
Dynamic: keywords
Dynamic: license
Dynamic: requires-dist
Dynamic: summary

# An Arbitrary scale super resolution methods for stereo-vision
# Original Title: StereoINR: Cross-View Geometry Consistent Stereo Super Resolution with Implicit Neural Representation

[Arixv Paper](https://arxiv.org/pdf/2407.03598v1)
### News
**2025.01.07** The Baseline, including the pretrained models and train/test configs, are available now.

### Installation
This implementation based on [BasicSR](https://github.com/xinntao/BasicSR) which is a open source toolbox for image/video restoration tasks.
    
    conda create -n stereoinr python==3.9
    pip install -r  requirements.txt  -i https://mirrors.tuna.tsinghua.edu.cn/pypi/web/simple
    cd  StereoINR
    python setup.py develop
            
### Base hardware Requirements
- : 4 NVIDIA 4090 GPUS

## 1. Quick Test 
#### 1.1 Download the pretrained model to the dir of 'experiments/pretrained_models'.
#####
   *pretrained model can be download at ,
       
#### 1.2 Modify the dataroot_lq: in  'options/test/ASSR'
        test_2x.yml
        test_4x.yml

#### 1.3 Run the test scripts 
        sh test.sh
#### 1.4 The final results are in 'results'


## 2. Training
        CUDA_VISIBLE_DEVICES=0,1,2,3 torchrun --nproc_per_node=4 --master_port=4321 basicsr/train.py -opt options/train/train_continuous_HATNet-L.yml --launcher pytorch

If StereoINR is helpful, please help to ‚≠ê the repo.

If you find this project useful for your research, please consider citing our paper:


### Contact

If you have any questions, please contact 
 

    
    
    
    
        
